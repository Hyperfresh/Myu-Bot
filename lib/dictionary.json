{
    "admin": {
        "sleep": "isSleeping = staff.sleep(msg, bot, isSleeping);",
        "resetbd": "profile.reset(msg, cont, db, Discord, bot, 'birthday');",
        "resetfc": "profile.reset(msg, cont, db, Discord, bot, 'fc');",
        "read": "db.read(); msg.react('âœ…');"
    },
    "staff": {
        "bulk": "staff.bulk(msg, cont, author);",
        "forceskip": "music.forceskip(msg, bot, Discord);",
        "mute": "staff.mute(msg, cont, admin, config.modRole, Discord, bot);"
    },
    "member": {
        "profile": "profile.show(msg, cont, bot, profileImg);",
        "setbirthday": "profile.setbd(msg, cont, db, Discord);",
        "setfc": "profile.setfc(msg, cont, db, Discord);",
        "becomefan": "profile.joinFan(msg);",
        "leavefan": "profile.leaveFan(msg);",

        "pat": "actions.run(msg, cont, randomInt, author, db, Discord, 'pat');",
        "hug": "actions.run(msg, cont, randomInt, author, db, Discord, 'hug');",
        "boop": "actions.run(msg, cont, randomInt, author, db, Discord, 'boop');",
        "slap": "actions.run(msg, cont, randomInt, author, db, Discord, 'slap');",

        "roll": "games.roll(msg, cont, randomInt, author);",
        "flip": "games.flipCoin(msg, randomInt);",
        "rps": "games.rps(msg, cont, randomInt, Discord, error);",
        "8ball": "games.ball(msg, cont, Discord);",

        "sonicsays": "memes.sonicsays(msg, cont, admin, sonicSays);",

        "play": "music.play(msg, yt, cont);",
        "remove": "music.remove(msg, cont);",
        "queue": "music.list(msg, cont);",
        "skip": "music.skip(msg, bot);",
        "clear": "music.clear(msg);",
        "stop": "music.stop(msg);",
        "loop": "music.loop(msg);",
        "nowplaying": "music.np(msg, bot);",

        "help": "help.action(msg, cont, author, isMod, admin);",
        "info": "var iwa = await bot.fetchUser(admin[0]); utilities.info(msg, iwa.avatarURL);",
        "ping": "utilities.ping(msg, author, bot);",
        "pong": "utilities.pong(msg, author, bot);",
        "leaderboard": "utilities.leaderboard(msg, cont, author, Discord, db, bot);",
        "anime": "utilities.anime(msg, cont, Discord);",
        "manga": "utilities.manga(msg, cont, Discord);",
        "role": "utilities.role(msg, cont);"
    }
}